<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="SuiteName" duration-ms="43470" started-at="2015-12-31T01:37:04Z" finished-at="2015-12-31T01:37:47Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="43470" started-at="2015-12-31T01:37:04Z" finished-at="2015-12-31T01:37:47Z">
      <class name="com.amex.automation.testcases.Test001P">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.amex.automation.testcases.Test001P@318f37c]" name="beforeMethod" is-config="true" duration-ms="7266" started-at="2015-12-30T20:37:31Z" finished-at="2015-12-30T20:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.amex.automation.testcases.Test001P.test001()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test001()[pri:0, instance:com.amex.automation.testcases.Test001P@318f37c]" name="test001" duration-ms="2" started-at="2015-12-30T20:37:39Z" finished-at="2015-12-30T20:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.amex.automation.testcases.Test001P@318f37c]" name="afterMethod" is-config="true" duration-ms="85" started-at="2015-12-30T20:37:39Z" finished-at="2015-12-30T20:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test001 status=SUCCESS method=Test001P.test001()[pri:0, instance:com.amex.automation.testcases.Test001P@318f37c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.amex.automation.testcases.Test001P.test001()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.amex.automation.testcases.Test001P@318f37c]" name="beforeMethod" is-config="true" duration-ms="4563" started-at="2015-12-30T20:37:39Z" finished-at="2015-12-30T20:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.amex.automation.testcases.Test001P.test002()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test002()[pri:0, instance:com.amex.automation.testcases.Test001P@318f37c]" name="test002" duration-ms="2908" started-at="2015-12-30T20:37:43Z" finished-at="2015-12-30T20:37:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at com.amex.automation.testcases.Test001P.test002(Test001P.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.amex.automation.testcases.Test001P@318f37c]" name="afterMethod" is-config="true" duration-ms="1275" started-at="2015-12-30T20:37:46Z" finished-at="2015-12-30T20:37:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test002 status=FAILURE method=Test001P.test002()[pri:0, instance:com.amex.automation.testcases.Test001P@318f37c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.amex.automation.testcases.Test001P.test002()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.amex.automation.testcases.Test001P -->
      <class name="com.amex.automation.testcases.AppTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.amex.automation.testcases.AppTest@2083fc73]" name="beforeMethod" is-config="true" duration-ms="14688" started-at="2015-12-30T20:37:04Z" finished-at="2015-12-30T20:37:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.amex.automation.testcases.AppTest.test001()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test001()[pri:0, instance:com.amex.automation.testcases.AppTest@2083fc73]" name="test001" duration-ms="83" started-at="2015-12-30T20:37:19Z" finished-at="2015-12-30T20:37:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.amex.automation.testcases.AppTest@2083fc73]" name="afterMethod" is-config="true" duration-ms="1447" started-at="2015-12-30T20:37:19Z" finished-at="2015-12-30T20:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test001 status=SUCCESS method=AppTest.test001()[pri:0, instance:com.amex.automation.testcases.AppTest@2083fc73] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.amex.automation.testcases.AppTest.test001()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.amex.automation.testcases.AppTest@2083fc73]" name="beforeMethod" is-config="true" duration-ms="7135" started-at="2015-12-30T20:37:20Z" finished-at="2015-12-30T20:37:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.amex.automation.testcases.AppTest.test002()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test002()[pri:0, instance:com.amex.automation.testcases.AppTest@2083fc73]" name="test002" duration-ms="2826" started-at="2015-12-30T20:37:27Z" finished-at="2015-12-30T20:37:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at com.amex.automation.testcases.AppTest.test002(AppTest.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.amex.automation.testcases.AppTest@2083fc73]" name="afterMethod" is-config="true" duration-ms="1063" started-at="2015-12-30T20:37:30Z" finished-at="2015-12-30T20:37:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test002 status=FAILURE method=AppTest.test002()[pri:0, instance:com.amex.automation.testcases.AppTest@2083fc73] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.amex.automation.testcases.AppTest.test002()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.amex.automation.testcases.AppTest@2083fc73]" name="afterSuite" is-config="true" duration-ms="45" started-at="2015-12-30T20:37:48Z" finished-at="2015-12-30T20:37:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.amex.automation.testcases.AppTest -->
    </test> <!-- Test -->
  </suite> <!-- SuiteName -->
</testng-results>
